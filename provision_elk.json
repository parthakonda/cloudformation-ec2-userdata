{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Cloudformation template to create ec2 and install ELK",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "AmiId": {
        "Description": "Image Id",
        "Type": "String",
        "ConstraintDescription": "must be ami-id of existing"
      },
    "InstanceType": {
      "Description": "WebServer EC2 instance type",
      "Type": "String",
      "Default": "t2.medium",
      "AllowedValues": [
        "t2.medium",
        "t2.large",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "SSHLocation": {
        "Description": "The IP address range that can be used to SSH to the EC2 instances",
        "Type": "String",
        "MinLength": "9",
        "MaxLength": "18",
        "Default": "0.0.0.0/0",
        "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
        "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "VolumeSize": {
        "Description": "Size of the volume",
        "Type": "String",
        "default": 20
    }
  },
  "Resources": {
    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "SecurityGroups": [
          {
            "Ref": "InstanceSecurityGroup"
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
            "Ref": "AmiId"
        },
        "BlockDeviceMappings" : [
            {
               "DeviceName" : "/dev/sda1",
               "Ebs" : { 
                   "VolumeSize" : {
                        "Ref": "VolumeSize"
                    }
                }
            }
        ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash -xe\n",
            "echo 'Installing ElasticSearch'\n",
            "sudo apt-get update -y",
            "wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -",
            "sudo apt-get install apt-transport-https",
            "echo 'deb https://artifacts.elastic.co/packages/7.x/apt stable main' | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list",
            "sudo apt-get update", 
            "sudo apt-get install elasticsearch -y",
            "# TODO: need to change the  /etc/elasticsearch/elasticsearch.yml",
            "# network.host: 'localhost'",
            "# http.port: 9200",
            "# cluster.initial_master_nodes: ['<PrivateIP']",
            "sudo service elasticsearch start",
            "# start on boot",
            "sudo update-rc.d elasticsearch defaults 95 10",
            "# Installing logstash",
            "echo 'Installing LogStash'\n",
            "sudo apt-get install default-jre -y",
            "sudo apt-get install logstash -y",
            "sudo service logstash start",
            "# Installing kibana",
            "echo 'Installing Kibana'\n",
            "sudo apt-get install kibana -y",
            "# TODO: update the /etc/kibana/kibana.yml",
            "# server.port: 5601",
            "# server.host: 'localhost'",
            "# elasticsearch.url: 'http://localhost:9200'",
            "sudo service kibana start"
          ]]}}
      }
    },
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH access via port 22",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SSHLocation"
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "InstanceId": {
      "Description": "InstanceId of the newly created EC2 instance",
      "Value": {
        "Ref": "EC2Instance"
      }
    },
    "PublicIP": {
      "Description": "Public IP address of the newly created EC2 instance",
      "Value": {
        "Fn::GetAtt": [
          "EC2Instance",
          "PublicIp"
        ]
      }
    },
    "PrivateIP": {
        "Description": "Private IP address of the newly created EC2 instance",
        "Value": {
          "Fn::GetAtt": [
            "EC2Instance",
            "PrivateIp"
          ]
        }
      }
  }
}